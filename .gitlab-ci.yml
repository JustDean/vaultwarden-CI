stages:
  # - lint
  # - build
  - deploy-test
  # - deploy-prod

variables:
  DOMAIN: .dolinskiydmitri-552.metaclass-st.ru
  IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
  VERSION: 11

# Lint helm:
#   stage: lint
#   image: dtzar/helm-kubectl:3.10.0
  # script:
  #   - helm lint .kube/vaultwarden


# Build:
#   stage: build
#   image: docker:20.10.12
#   services:
#     - docker:20.10.12-dind
#   before_script:
#     - i=0; while [ "$i" -lt 12 ]; do docker info && break; sleep 5; i=$(( i + 1 )) ; done
#     - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_BUILD_TOKEN
#   script:
#     - docker build -t $IMAGE:$VERSION .
#     - docker push ${IMAGE}:${VERSION}

.create_namespace:
  allow_failure: true
  before_script:
    - kubectl create namespace $NAMESPACE

.create_secret:
  extends: .create_namespace
  before_script:
    - >
      kubectl create secret docker-registry registry-credentials 
      --docker-server=$CI_REGISTRY 
      --docker-username=$CI_DEPLOY_USER
      --docker-password=$CI_DEPLOY_PASSWORD
      -o yaml --dry-run=client | kubectl -n $NAMESPACE apply -f - || true
  script:
    - > 
        helm -n $NAMESPACE upgrade
        --set vaultwarden.image.repository=$IMAGE
        --set vaultwarden.image.tag=$VERSION
        --set vaultwarden.ingress.domain=${NAMESPACE}${DOMAIN}
        --install $NAMESPACE .kube/vaultwarden

Deploy Test:
  stage: deploy-test
  extends: .create_secret
  # needs:
  #   - Build
  variables:
    NAMESPACE: vaultwarden-test
  image: dtzar/helm-kubectl:3.10.0

Stop Test:
  stage: deploy-test
  when: manual
  variables:
    NAMESPACE: vaultwarden-test
  image: dtzar/helm-kubectl:3.10.0
  script:
    - helm -n $NAMESPACE uninstall $NAMESPACE

# Deploy Prod:
#   stage: deploy-prod
#   variables:
#      DOMAIN: vaultwarden-prod.dolinskiydmitri-552.metaclass-st.ru