# METAINFO
stages:
  - lint
  # - build
  - deploy-test
  - deploy-prod

variables:
  HELM_IMAGE: dtzar/helm-kubectl:3.10.0
  DOMAIN: .dolinskiydmitri-552.metaclass-st.ru
  IMAGE: $CI_REGISTRY_IMAGE
  # VERSION: $CI_PIPELINE_IID
  VERSION: 66

# STAGES
Lint helm:
  stage: lint
  image: $HELM_IMAGE
  script:
    - helm lint .kube/vaultwarden

# Build:
#   stage: build
#   needs:
#     - Lint helm
#   image: docker:20.10.12
#   services:
#     - docker:20.10.12-dind
#   before_script:
#     - i=0; while [ "$i" -lt 12 ]; do docker info && break; sleep 5; i=$(( i + 1 )) ; done
#     - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_BUILD_TOKEN
#   script:
#     - docker build -t $IMAGE:$VERSION .
#     - docker push ${IMAGE}:${VERSION}

.deploy_chart:
  before_script:
    - >
      kubectl create secret docker-registry registry-credentials 
      --docker-server=$CI_REGISTRY 
      --docker-username=$CI_DEPLOY_USER
      --docker-password=$CI_DEPLOY_PASSWORD
      -o yaml --dry-run=client | kubectl -n $NAMESPACE apply -f - || true
  script:
    - > 
      helm -n $NAMESPACE upgrade
      --set fullnameOverride=$NAMESPACE
      --set vaultwarden.image.repository=$IMAGE
      --set vaultwarden.image.tag=$VERSION
      --set vaultwarden.ingress.domain=${NAMESPACE}${DOMAIN}
      --set vaultwarden.admin.basicAuth.password=${ADMIN_PASSWORD}
      --set vaultwarden.ingress.tls.secretName=${NAMESPACE}-tls
      --install $NAMESPACE .kube/vaultwarden
      --create-namespace
      --wait

Deploy Test:
  stage: deploy-test
  extends: .deploy_chart
  # needs:
  #   - Build
  variables:
    NAMESPACE: vaultwarden-test
    ADMIN_PASSWORD: adminadmin
  image: $HELM_IMAGE

Stop Test:
  stage: deploy-test
  when: manual
  needs:
    - Deploy Test
  variables:
    NAMESPACE: vaultwarden-test
  image: $HELM_IMAGE
  script:
    - helm -n $NAMESPACE uninstall $NAMESPACE --wait

Deploy Prod:
  stage: deploy-prod
  extends: .deploy_chart
  when: manual
  # needs:
  #   - Build
  variables:
    NAMESPACE: vaultwarden-prod
    ADMIN_PASSWORD: adminadminadmin
  image: $HELM_IMAGE